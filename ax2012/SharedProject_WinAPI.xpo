Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: CLS

; Microsoft Dynamics AX Class: WinAPIServer unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #WinAPIServer
    PROPERTIES
      Name                #WinAPIServer
      RunOn               #Server
      Origin              #{2D0C0C74-0000-1000-5D45-2DC7C95A5365}
      LegacyId            #3188
    ENDPROPERTIES
    
    METHODS
      SOURCE #createDirectory
        #public server static int createDirectory(str name)
        #{
        #    InteropPermission interopPerm;
        #    ;
        #    interopPerm = new InteropPermission(InteropKind::ClrInterop);
        #    interopPerm.assert();
        #
        #    System.IO.Directory::CreateDirectory(name);
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #createDirectoryPath
        #// Verifyes or creates Path
        #//
        #public server static boolean createDirectoryPath(FilePath _path)
        #{
        #    int         ptr;
        #    ;
        #
        #    _path = strLRTrim(_path);
        #
        #    if (substr(_path,strlen(_path),1) != '\\') // Adding backslash gives a more simple while-loop!
        #    {
        #        _path += '\\';
        #    }
        #
        #    ptr = strfind(_path, '\\', 1, strlen(_path));
        #
        #    while (ptr)
        #    {
        #        WinAPIServer::createDirectory(substr(_path, 1, ptr));
        #
        #        if (!WinAPIServer::folderExists(substr(_path, 1, ptr)))
        #        {
        #            break;
        #        }
        #
        #        ptr = strfind(_path, '\\', ptr + 1, strlen(_path));
        #    }
        #
        #    return WinAPIServer::folderExists(_path);
        #}
      ENDSOURCE
      SOURCE #folderExists
        #//This return true, if a file or directory exists.
        #public server static boolean folderExists(Filename _filename)
        #{
        #    InteropPermission interopPerm;
        #    boolean ret;
        #    ;
        #    interopPerm = new InteropPermission(InteropKind::ClrInterop);
        #    interopPerm.assert();
        #
        #    ret = System.IO.Directory::Exists(_filename);
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #removeDirectory
        #// Permissions needed
        #//      FileIOPermission(_fileName,'w');
        #public server static boolean removeDirectory(str _directory)
        #{
        #    InteropPermission   interopPerm;
        #    FileIOPermission    fileIOPerm;
        #    Set                 permissionSet;
        #    ;
        #
        #    //Bug#27066 -- v-venath: As FileIO and Interop Permissions are used in the code
        #    //we get Multiple calls to CodeAccessPermission::Assert error, to avoid this create Permission Set
        #    //and use CodeAccessPermission::assertMultiple.
        #    permissionSet = new Set(Types::Class);
        #
        #    // check file I/O permission
        #    fileIOPerm = new FileIOPermission(_directory,'w');
        #
        #    // get dll interop permission
        #    interopPerm = new InteropPermission(InteropKind::ClrInterop);
        #
        #    // add both Permissions to Set.
        #    permissionSet.add(fileIOPerm);
        #    permissionSet.add(interopPerm);
        #
        #    // Call multiple assert on created Permissions Set.
        #    CodeAccessPermission::assertMultiple(permissionSet);
        #
        #    try
        #    {
        #        System.IO.Directory::Delete(_directory,true);
        #
        #        // RevertAssert for created permissions.
        #        CodeAccessPermission::revertAssert();
        #        return true;
        #    }
        #    catch(Exception::CLRError)
        #    {
        #        // RevertAssert for created permissions.
        #        CodeAccessPermission::revertAssert();
        #        return false;
        #    }
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: PRN

; Microsoft Dynamics AX Project : WinAPI unloaded
; --------------------------------------------------------------------------------
  PROJECTVERSION 2
  
  PROJECT #WinAPI
  SHARED
  PROPERTIES
    Name                #WinAPI
    Origin              #{CAD46169-777E-4129-9271-CF916B98D9A1}
  ENDPROPERTIES
  
    PROJECTCLASS ProjectNode
    BEGINNODE
      FILETYPE 0
      UTILTYPE 45
      UTILOBJECTID 636
      NODETYPE 329
      NAME #WinAPI
    ENDNODE
    BEGINNODE
      FILETYPE 0
      UTILTYPE 45
      UTILOBJECTID 3188
      NODETYPE 329
      NAME #WinAPIServer
    ENDNODE
  ENDPROJECT
  

***Element: END
